- A variable is created the moment you first assign a value to it.
x = 5
y = "John"
print(x)
print(y)

- Variable do not need to be declared with any particular type,and can even change type after they have been set.
x = 4  #x is of type int
x = "Sally" #x is now of type str
print(x)

- If you want to specify the data type of a variable,this can be done with casting.
x = str(3)  #x will be '3'
x = int(3)  #y will be 3
z = float(3) #z will be 3.0

- You can get the data type of a variable with the type() function.
x = 5
y = "John"
print(type(x))
print(type(y)) 

- Single varibles can be declared either by using single or double quotes:
x = "John"
# is the same as
x = 'John'

- variable names are case-sensitive
a = 4
A = "Sally"
#A will not overwrite after

- MultiWords Variable Names
* variable names with more than one word can be difficult to read.
* There are several techniques you can use to make them more readable:

Camel Case
- Eachword,except the first,starts with a capital letter:
myVariableName = "John"

Pascal Case
- Each word starts with a capital letter:
MyVariableName = "John"

Snake Case 
- Each word is separated by an underscore character:
my_variable_name = "John"

- Python allows you to assign values to multiple variables in one line:
x,y,z = "Orange","Banana","Cherry"
print(x)
print(y)
print(z)

- You can assign the same value to multiple variables in one line:
x = y = z = "Orange"
print(x)
print(y)
print(z)

- If you have a collection of values in a list,tuple etc. Python allows you to extract the values into variables.
  This is called unpacking.
  
  fruits = ["apple","banana","cherry"]
  x, y, z = fruits
  print(x)
  print(y)
  print(z)
  
- print function is often used to output variables.
  x = "Python is awesome"
  print(x)
  
- you output multiple variables,separated by a comma:
  x = "Python"
  y = "is"
  z = "awesome"
  print(x,y,z)
  or 
  print(x+y+z)
  
- For numbers,the + character works as a mathmatical operator:
  x = 5
  y = 10
  print(x+y)
  
- In the print() function, when you try to combine a string and a number with the + operator,Python will give you an error:
  x = 5
  y = "John"
  print(x+y)
  - The best way to output multiple variables in the print() function is to separate them with commas, which even support different data types:
  x = 5
  y = "John"
  print(x,y)
  
- Variables that are created outside of a function are known as global variables.
- Global variables can be used by everyone, both inside of functions and outside.

x = "awesome"
def myfunc():
	print("Python is " + x)
	
myfunc()

- If you create a variable with the same name inside a function, this variable will be local,and can only be used inside the function.
- The global variable with the same name will remain as it was, global and with the original value.

x = "awesome"
def myfunc():
	x = "fantastic"
	print("Python is " + x)
myfunc()
print("Python is " + x) 

- To create a global variable inside a function, you can use the global keyword.
def myfunc():
	global x
	x = "fantastic"
myfunc()
print("Python is " + x)

- To change the value of a global varible inside a function, refer to the variable by using the global keyword:
x = "awesome"
def myfunc():
	global x
	x = "fantastic"
myfunc()
print("Python is " + x)



  
  
  


